import { part1, part2, part2test } from '.';

const title = '';

describe(`Day ${__filename.match(/\/([^/]+)\/spec/)[1]} - ${title}`, () => {
  xdescribe('Part 1', () => {
    describe('Tests', () => {
      test.each([
        [9, 6],
      ])('%p => %p', (given, expected) => {
        expect(part1(given)).toEqual(expected);
      });
    });

    // describe('Solution', () => {
    //   const solution = part1(50);

    //   test(`${solution}`, () => {
    //     expect(solution).toEqual(171);
    //   });
    // });
  });

  describe('Part 2', () => {
    xdescribe('Tests', () => {
      const given = '1000000000000000000000000000000000000000\n0100000000000000000000000000000000000000\n0011000000000000000000000000000000000000\n0001110000000000000000000000000000000000\n0000111000000000000000000000000000000000\n0000011110000000000000000000000000000000\n0000001111100000000000000000000000000000\n0000001111110000000000000000000000000000\n0000000111111100000000000000000000000000\n0000000011111111000000000000000000000000\n0000000001111111110000000000000000000000\n0000000000111111111000000000000000000000\n0000000000011111111110000000000000000000\n0000000000011111111111100000000000000000\n0000000000001111111111110000000000000000\n0000000000000111111111111100000000000000\n0000000000000011111111111111000000000000\n0000000000000001111111111111110000000000\n0000000000000000111111111111111000000000\n0000000000000000111111111111111110000000\n0000000000000000011111111111111111100000\n0000000000000000001111111111111111110000\n0000000000000000000111111111111111111100\n0000000000000000000011111111111111111111\n0000000000000000000001111111111111111111\n0000000000000000000001111111111111111111\n0000000000000000000000111111111111111111\n0000000000000000000000011111111111111111\n0000000000000000000000001111111111111111\n0000000000000000000000000111111111111111\n0000000000000000000000000011111111111111\n0000000000000000000000000011111111111111\n0000000000000000000000000001111111111111\n0000000000000000000000000000111111111111\n0000000000000000000000000000011111111111';
      const expected = [25, 20, 250020];

      const field = given.split('\n').map(row => row.split('').map(c => parseInt(c, 10)));

      test('should equal', () => {
        expect(part2test(field, 10)).toEqual(expected);
      });
    });

    describe('Solution', () => {
      const solution = part2();

      test(`${solution}`, () => {
        expect(solution).toEqual(true);
      });
    });
  });
});
